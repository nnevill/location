diff --git a/contrib/location_email/location_email.info b/contrib/location_email/location_email.info
new file mode 100644
index 0000000..53c63b4
--- /dev/null
+++ b/contrib/location_email/location_email.info
@@ -0,0 +1,16 @@
+name = Location Email
+package = Location
+description = Allows you to add an email address to a location.
+dependencies[] = location
+core = 7.x
+files[] = location_email.module
+files[] = location_email.install
+files[] = location_email.views.inc
+
+
+; Information added by drupal.org packaging script on 2012-09-03
+version = "7.x-3.0-alpha3+0-dev"
+core = "7.x"
+project = "location"
+datestamp = "1346676288"
+
diff --git a/contrib/location_email/location_email.install b/contrib/location_email/location_email.install
new file mode 100644
index 0000000..d0bc02c
--- /dev/null
+++ b/contrib/location_email/location_email.install
@@ -0,0 +1,48 @@
+<?php
+
+/**
+ * @file
+ *   Install, update and uninstall functions for the location_email module.
+ */
+
+/**
+ * Implements hook_schema().
+ */
+function location_email_schema() {
+  $schema['location_email'] = array(
+    'description' => 'location_email.module {location} supplementary table.',
+    'fields' => array(
+      'lid' => array(
+        'description' => '{location}.lid',
+        'type' => 'int',
+        'unsigned' => TRUE,
+        'not null' => TRUE,
+        'default' => 0,
+      ),
+      'email' => array(
+        'description' => 'Email address',
+        'type' => 'varchar',
+        'length' => 254,
+        'not null' => TRUE,
+        'default' => '',
+      ),
+    ),
+    'primary key' => array('lid'),
+  );
+
+  return $schema;
+}
+
+/**
+ * Implements hook_install().
+ */
+function location_email_install() {
+  // Change weight.
+  db_update('system')
+    ->fields(array(
+      'weight' => 1,
+    ))
+    ->condition('name', 'location_email')
+    ->condition('type', 'module')
+    ->execute();
+}
diff --git a/contrib/location_email/location_email.module b/contrib/location_email/location_email.module
new file mode 100644
index 0000000..eccd508
--- /dev/null
+++ b/contrib/location_email/location_email.module
@@ -0,0 +1,80 @@
+<?php
+
+/**
+ * @file
+ * Add Email address fields to Location address.
+ */
+
+/**
+ * Implements hook_locationapi().
+ */
+function location_email_locationapi(&$location, $op, $a3 = NULL, $a4 = NULL) {
+  switch ($op) {
+    case 'fields':
+      return array('email' => t('Email address'));
+
+    case 'defaults':
+      return array(
+        'email' => array('default' => '', 'collect' => 0, 'weight' => 25),
+      );
+
+    case 'field_expand':
+      if ($a3 == 'email') {
+        return array(
+          '#type' => 'textfield',
+          '#title' => t('Email address'),
+          '#size' => 31,
+          '#maxlength' => 31,
+          '#description' => NULL,
+          '#required' => ($a4 == 2),
+          '#default_value' => $location,
+        );
+      }
+      break;
+
+    case 'save':
+      db_delete('location_email')
+        ->condition('lid', $location['lid'])
+        ->execute();
+      if (!empty($location['email'])) {
+        db_insert('location_email')
+          ->fields(array(
+            'lid' => $location['lid'],
+            'email' => $location['email'],
+          ))
+          ->execute();
+      }
+      break;
+
+    case 'load':
+      $fields = array();
+      $email = db_query('SELECT email FROM {location_email} WHERE lid = :lid', array(':lid' => $location['lid']))->fetchField();
+      $fields['email'] = $email ? $email : '';
+      return $fields;
+
+    case 'delete':
+      db_delete('location_email')
+        ->condition('lid', $location['lid'])
+        ->execute();
+      break;
+  }
+}
+
+/**
+ * Implements hook_views_api().
+ */
+function location_email_views_api() {
+  return array(
+    'api' => 3,
+  );
+}
+
+/**
+ * Implements hook_token_list().
+ */
+function location_email_token_list($type = 'all') {
+  if ($type == 'node' || $type == 'user' || $type == 'all') {
+    $tokens['location']['location-email_N'] = t('Location Email address (If there are multiple locations per node, N is the iteration, starting with 0)');
+    return $tokens;
+  }
+}
diff --git a/contrib/location_email/location_email.views.inc b/contrib/location_email/location_email.views.inc
new file mode 100644
index 0000000..d2389cb
--- /dev/null
+++ b/contrib/location_email/location_email.views.inc
@@ -0,0 +1,67 @@
+<?php
+
+/**
+ * @file
+ * Views 3 support for Location Email.
+ */
+
+/**
+ * Implements hook_views_data().
+ */
+function location_email_views_data() {
+  // ----------------------------------------------------------------
+  // location_email table -- basic table information.
+
+  // Define the base group of this table. Fields that don't
+  // have a group defined will go into this field by default.
+
+  $data['location_email']['table']['group'] = t('Location');
+
+  // Join location_email to all the tables that would be useful
+  $data['location_email']['table']['join'] = array(
+    // location_email links to location via lid.
+    'location' => array(
+      'left_field' => 'lid',
+      'field' => 'lid',
+    ),
+    // location_email links to node through location_instance via lid.
+    'node' => array(
+      'left_table' => 'location_instance',
+      'left_field' => 'lid',
+      'field' => 'lid',
+    ),
+    // location_email links to node_revision through location_instance via lid.
+    'node_revision' => array(
+      'left_table' => 'location_instance',
+      'left_field' => 'lid',
+      'field' => 'lid',
+    ),
+    // location_email links to users through location_instance via lid.
+    'users' => array(
+      'left_table' => 'location_instance',
+      'left_field' => 'lid',
+      'field' => 'lid',
+    ),
+  );
+
+  // ----------------------------------------------------------------
+  // location_email table -- fields
+
+  $data['location_email']['email'] = array(
+    'title' => t('Email address'),
+    'help' => t('The email address of the selected location.'),
+    'field' => array(
+      'click sortable' => TRUE,
+    ),
+    'argument' => array(
+      'handler' => 'views_handler_argument_string',
+      'empty field name' => t('None'),
+    ),
+    'filter' => array(
+      'handler' => 'views_handler_filter_string',
+      'allow empty' => TRUE,
+    ),
+  );
+
+  return $data;
+}
diff --git a/location.tpl.php b/location.tpl.php
index 435d17a..aec14a7 100644
--- a/location.tpl.php
+++ b/location.tpl.php
@@ -11,19 +11,25 @@
         <?php endif; ?>
       </div>
     <?php endif; ?>
+    <?php if (!empty($postal_code)): ?>
+      <span class="postal-code"><?php print $postal_code; ?></span>
+    <?php endif; ?>
     <?php if (!empty($city)): ?>
       <span class="locality"><?php print $city; ?></span><?php if (!empty($province)) print ', '; ?>
     <?php endif; ?>
     <?php if (!empty($province)): ?>
       <span class="region"><?php print $province_print; ?></span>
     <?php endif; ?>
-    <?php if (!empty($postal_code)): ?>
-      <span class="postal-code"><?php print $postal_code; ?></span>
-    <?php endif; ?>
     <?php if (!empty($country_name)): ?>
       <div class="country-name"><?php print $country_name; ?></div>
     <?php endif; ?>
-    <?php if (!empty($phone)): ?>
+     <?php if (!empty($email)): ?>
+      <div class="email">
+        <abbr class="type" title="email"><?php print t("Email address"); ?>:</abbr>
+        <span><a href="mailto:<?php print $email; ?>"><?php print $email; ?></a></span>
+      </div>
+    <?php endif; ?>
+   <?php if (!empty($phone)): ?>
       <div class="tel">
         <abbr class="type" title="voice"><?php print t("Phone"); ?>:</abbr>
         <span class="value"><?php print $phone; ?></span>
